{
  "name": "digital",
  "version": "1.0.0",
  "main": "font/src/  index.js",
  "license": "MIT",
  "dependencies": {
    "immutable": "^4.0.0-rc.12",
    "imutable": "^0.0.1",
    "konva": "^4.1.2",
    "linq": "^3.2.1",
    "react": "^16.11.0",
    "react-dom": "^16.12.0",
    "react-konva": "^16.12.0-0",
    "react-redux": "^7.1.3",
    "react-router-dom": "^5.1.2",
    "redux": "^4.0.4",
    "redux-thunk": "^2.3.0",
    "styled-components": "^4.4.1",
    "webpack": "^4.41.2"
  },
  "devDependencies": {
    "@babel/core": "^7.7.5",
    "@babel/preset-env": "^7.7.6",
    "@babel/preset-react": "^7.7.0",
    "@babel/preset-typescript": "^7.7.4",
    "@types/enzyme": "^3.10.4",
    "@types/enzyme-adapter-react-16": "^1.0.5",
    "@types/enzyme-to-json": "^1.5.3",
    "@types/jest": "^24.0.23",
    "@types/react": "^16.9.16",
    "@types/react-dom": "^16.9.4",
    "@types/react-redux": "^7.1.5",
    "@types/react-router-dom": "^5.1.2",
    "@types/react-test-renderer": "^16.9.1",
    "@types/styled-components": "^4.4.1",
    "@typescript-eslint/eslint-plugin": "^2.11.0",
    "@typescript-eslint/parser": "^2.11.0",
    "babel-eslint": "^10.0.3",
    "babel-loader": "^8.0.6",
    "babel-plugin-react-remove-properties": "^0.3.0",
    "cache-loader": "^4.1.0",
    "clean-webpack-plugin": "^3.0.0",
    "copy-webpack-plugin": "^5.1.1",
    "enzyme": "^3.10.0",
    "enzyme-adapter-react-16": "^1.15.1",
    "enzyme-to-json": "^3.4.3",
    "eslint": "^6.8.0",
    "eslint-config-prettier": "^6.7.0",
    "eslint-import-resolver-webpack": "^0.11.1",
    "eslint-plugin-import": "^2.19.1",
    "eslint-plugin-prettier": "^3.1.2",
    "eslint-plugin-react": "^7.17.0",
    "eslint_d": "^8.0.0",
    "hard-source-webpack-plugin": "^0.13.1",
    "html-loader": "^0.5.5",
    "html-webpack-plugin": "^3.2.0",
    "husky": "^3.1.0",
    "jest": "^24.9.0",
    "lint-staged": "^9.5.0",
    "npm-run-all": "^4.1.5",
    "prettier": "^1.19.1",
    "prettier_d": "^5.7.4",
    "react-test-renderer": "^16.12.0",
    "thread-loader": "^2.1.3",
    "ts-jest": "^24.2.0",
    "ts-loader": "^6.2.1",
    "tsconfig-paths-webpack-plugin": "^3.2.0",
    "tslint": "^5.20.1",
    "tslint-config-prettier": "^1.18.0",
    "tslint-config-standard": "^8.0.1",
    "tslint-plugin-prettier": "^2.0.1",
    "typescript": "^3.7.3",
    "webpack-cli": "^3.3.9",
    "webpack-dev-server": "^3.10.0",
    "webpack-merge": "^4.2.2",
    "yarn-run-all": "^3.1.1"
  },
  "scripts": {
    "webpack:d": "webpack --config webpack.dev.js --display-error-details --progress",
    "webpack:p": "webpack --config webpack.prod.js --display-error-details --progress",
    "build:d": "yarn run-p webpack:d",
    "build:p": "yarn run-p webpack:p",
    "docker:d": "cd docker; docker-compose -f dev.yml -f docker-compose.yml up --build",
    "docker:d:w": "cd docker; docker-compose.exe -f dev.yml -f docker-compose.yml up --build",
    "docker:p": "cd docker; docker-compose -f pro.yml -f docker-compose.yml up --build && yarn run build:p",
    "docker:stop": "docker stop $(docker ps -a -q)",
    "watch": "webpack-dev-server --config webpack.dev.js --display-error-details --progress --watch --color --info-verbosity verbose",
    "check": "yarn run tsc --noEmit && yarn run tslint",
    "tslint-fix": "tslint --fix --project tsconfig.json",
    "tslint:prettier-check": "tslint-config-prettier-check ./tslint.json",
    "tslint": "tslint --fix --force --format stylish --project tsconfig.json ./{src,__tests__}/**/*.{ts,tsx}",
    "prettier": "prettier --write ./**/{src,__tests__}/**/*.{ts,tsx,js,tsx}",
    "lint": "eslint ./**/src/**/*.ts[x]",
    "test": "jest --env=jsdom",
    "test:c": "jest --env=jsdom --coverage",
    "test:u": "jest -u --env=jsdom",
    "test:onetime": "jest --env=jsdom"
  },
  "lint-staged": {
    "*.{js, jsx, ts, tsx}": [
      "eslint --fix",
      "git add"
    ]
  },
  "jest": {
    "transformIgnorePatterns": [
      "[/\\\\]node_modules[/\\\\].+\\.(js|jsx|ts|tsx)$"
    ],
    "watchPathIgnorePatterns": [
      "node_modules"
    ],
    "moduleNameMapper": {
      "^@/(.+)": "<rootDir>/front/src/$1"
    },
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "ts"
    ],
    "setupFilesAfterEnv": [
      "<rootDir>/front/src/setupTests.ts"
    ],
    "moduleDirectories": [
      "node_modules"
    ],
    "transform": {
      "^.+\\.(ts|tsx)$": "ts-jest"
    },
    "globals": {
      "ts-jest": {
        "tsConfig": "tsconfig.json"
      }
    }
  }
}
